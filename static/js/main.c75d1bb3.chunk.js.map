{"version":3,"sources":["Assets/star.png","Assets/defaultImage.jpg","Assets/loading.gif","Home/Form.js","Restaurants/Restaurants.js","Modal/Modal.js","Home/Home.js","App.js","index.js"],"names":["module","exports","Form","props","handleLocationChange","place","autocomplete","getPlace","console","log","geometry","geocode","lat","location","lng","handleSearchChange","event","query","target","value","setState","handleKeyPress","key","preventDefault","name","document","getElementsByName","focus","searchRestaurant","state","handleOnClick","loading","autocompleteInput","React","createRef","getElementsByClassName","setTimeout","getElementsByTagName","style","display","this","google","maps","places","Autocomplete","current","types","componentRestrictions","country","addListener","className","status","onSubmit","e","ref","id","type","placeholder","city","onKeyPress","onChange","autoComplete","onClick","Component","Restaurants","restaurants","modalOn","length","map","item","restaurant","establishment","src","thumb","defaultImage","alt","address","user_rating","aggregate_rating","star","timings","Modal","modal","modalInfo","modalClose","href","phone_numbers","Home","initMap","handleLoad","getElementsById","coords","collections","nearbyRestaurants","infowindow","service","bind","fetch","process","ip_response","json","data","latitude","longitude","getCollections","Error","method","headers","response","nearby_restaurants","entity_id","sydney","LatLng","Map","getElementById","center","zoom","request","fields","PlacesService","findPlaceFromQuery","results","PlacesServiceStatus","OK","i","Marker","position","setCenter","ipLookUp","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.c75d1bb3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/star.45dd5470.png\";","module.exports = __webpack_public_path__ + \"static/media/defaultImage.e0b45e7f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/loading.1151080c.gif\";","import React, {Component} from 'react';\r\nimport loading from '../Assets/loading.gif'\r\nimport './Home.scss';\r\n/* global google */\r\n\r\nclass Form extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            query: '',\r\n            loading: false\r\n        }\r\n        this.autocompleteInput = React.createRef();\r\n        this.autocomplete = null;\r\n    }\r\n\r\n\r\n    handleLocationChange = () => {\r\n        const place = this.autocomplete.getPlace();\r\n\r\n        console.log(place);\r\n\r\n        if(!place.geometry){\r\n            //ADD INPUT TIP HERE!!!\r\n            console.log('Invalid Input')\r\n        }else{\r\n            this.props.geocode({\r\n                lat: place.geometry.location.lat(),\r\n                lng: place.geometry.location.lng()\r\n            })\r\n        }\r\n    }\r\n\r\n    handleSearchChange = (event) => {\r\n        let query = event.target.value\r\n        this.setState({\r\n            query: query\r\n        })\r\n    }\r\n\r\n    handleKeyPress = (event) =>{\r\n\r\n        if(event.key === 'Enter'){\r\n            event.preventDefault()\r\n            if(event.target.name === 'location'){\r\n                document.getElementsByName('query')[0].focus();\r\n            }\r\n            \r\n            if(event.target.name === 'query'){\r\n                this.props.searchRestaurant(this.state.query);\r\n            }   \r\n        }\r\n        \r\n    }\r\n\r\n    handleOnClick = () => {\r\n        if(!this.state.query){\r\n            console.log('nearby restaurants');\r\n        }else{\r\n            this.props.searchRestaurant(this.state.query);\r\n        }\r\n    }\r\n\r\n    handleLoad(){\r\n        console.log(document.getElementsByClassName('.home')[0]);\r\n    }\r\n\r\n    componentDidMount(){\r\n        setTimeout(() => {\r\n            document.getElementsByTagName('form')[0].style.display = 'flex';\r\n            //document.getElementsByClassName('loading-bg')[0].style.backgroundImage= 'none';\r\n            document.getElementsByClassName('loader')[0].style.display= 'none';\r\n        }, 2000);\r\n        this.autocomplete = new google.maps.places.Autocomplete(this.autocompleteInput.current,\r\n            {types: [\"geocode\"], componentRestrictions: {country: 'au'}});\r\n    \r\n        this.autocomplete.addListener('place_changed', this.handleLocationChange);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <form className={this.props.status ? 'form form-searching' : 'form'}  onSubmit={(e) => e.preventDefault()}>\r\n            <h1>w<span className='spread spread-out'>here's</span>t<span className='spread spread-out'>he</span>f<span className='spread spread-out'>ood</span>?</h1> <div className={this.props.loading ? 'loading' : 'not-loading'}>{/* <img src={loading}/> */}</div>\r\n                <input className='location-input input' ref={this.autocompleteInput}\r\n                id=\"autocomplete\" \r\n                type='text' \r\n                placeholder={this.props.location.city}\r\n                name='location'\r\n                onKeyPress={this.handleKeyPress}  \r\n                  \r\n                />\r\n                <input className='text-input input' type='text' \r\n                placeholder='Search for Restaurants or Cusines'\r\n                onChange={this.handleSearchChange}  \r\n                name='query'\r\n                onKeyPress={this.handleKeyPress}\r\n                autoComplete='off'  \r\n                />\r\n                <button className='search-btn btn' type='submit' onClick={this.handleOnClick}>search</button>\r\n            </form>\r\n         )\r\n    }\r\n}\r\n\r\nexport default Form;\r\n\r\n","import React from 'react';\r\nimport star from '../Assets/star.png';\r\nimport defaultImage from '../Assets/defaultImage.jpg'\r\n\r\n\r\nconst Restaurants = ({restaurants, status, modalOn}) => {\r\nreturn(\r\n    <div className={restaurants.length === 0 ? 'hide' : 'restaurant-list'} >\r\n        {\r\n            restaurants.map(item => {\r\n                return (\r\n                    <div key={item.restaurant.id} id='box' className={status? 'display' : 'hide'}>\r\n                    <div className='box-title'>\r\n                        <h2>\r\n                            {item.restaurant.name} \r\n                        </h2>\r\n                        <p>{item.restaurant.establishment}</p>\r\n                    </div>\r\n                        <img className='box-img' src={item.restaurant.thumb === '' ? defaultImage : item.restaurant.thumb} alt='food'/>\r\n                        <p className='box-location'>{item.restaurant.location.address}</p>\r\n                    <div className='box-rating'>\r\n                        <p className='rate-number'>{item.restaurant.user_rating.aggregate_rating}</p>\r\n                        <div className='star'><img src={star} alt='user-rating'/></div>\r\n                    </div>\r\n\r\n                    <div className='contact'>\r\n                    <button className='call-btn' onClick={() => modalOn(item.restaurant)}>More</button>\r\n                    </div>\r\n                        <p className='box-time'>{item.restaurant.timings}</p>\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n    </div>\r\n)\r\n}\r\n\r\n\r\nexport default Restaurants;","import React from 'react';\r\n\r\n\r\nconst Modal = ({modal, modalInfo, modalClose}) => {\r\n        return(\r\n            <div className={modal? 'modal' : 'hide'}>\r\n\r\n            <div className='modal-card'>\r\n                <div className='modal-title'>\r\n                <h3>{modalInfo.name}</h3>\r\n                <button className='modal-btn' onClick={() => modalClose()}>Close</button>\r\n                </div>\r\n                \r\n                <div className='location-details'>\r\n                    <div className='details'>\r\n                        <div className='contact'>\r\n                            Phone Number: <a href={`tel${modalInfo.phone_numbers}`}>{modalInfo.phone_numbers}</a>\r\n                        </div>\r\n                        <div id=\"map\"></div> \r\n                        <div className='address'>Address: {modalInfo.location}</div>    \r\n                    </div>     \r\n \r\n                </div>\r\n\r\n\r\n            </div>\r\n            \r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Modal;","import React, {Component} from 'react';\r\nimport Form from './Form';\r\nimport Restaurants from '../Restaurants/Restaurants'\r\nimport Modal from '../Modal/Modal';\r\nimport './Home.scss';\r\n/* global google */\r\n\r\nclass Home extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            location: {},\r\n            coords: {},\r\n            collections: [],\r\n            nearbyRestaurants: [], \r\n            restaurants: [],\r\n            display: false,\r\n            status: false,\r\n            loading: false,\r\n            modal: false,\r\n            modalInfo: {},\r\n            map: {},\r\n            infowindow: {},\r\n            service: {}\r\n        }\r\n\r\n        this.geocode = this.geocode.bind(this);\r\n        this.searchRestaurant = this.searchRestaurant.bind(this);\r\n    }\r\n\r\n    async ipLookUp(){\r\n         try{\r\n            const ip_response = await fetch(`http://api.ipstack.com/check?access_key=${process.env.REACT_APP_IPSTACKKEY}`);\r\n            const data = await ip_response.json();\r\n            this.setState({\r\n                location: data\r\n            })\r\n            const coords = {\r\n                lat: data.latitude,\r\n                lng: data.longitude\r\n            }\r\n            this.getCollections(coords);\r\n            return coords;\r\n        }\r\n        catch(err){\r\n            throw new Error('Request failed');\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    async getCollections(location){\r\n        const response = await fetch(`https://developers.zomato.com/api/v2.1/collections?lat=${location.lat}&lon=${location.lng}&count=6`, {\r\n        method: 'get',\r\n        headers: {\r\n            'user-key': process.env.REACT_APP_ZOMATOKEY,\r\n            'accept': 'application/json'\r\n        }\r\n        })\r\n        const collections = await response.json()\r\n         this.setState({\r\n            collections: collections.collections\r\n        })\r\n    }\r\n\r\n\r\n    async geocode(coords){\r\n        const response = await fetch(`https://developers.zomato.com/api/v2.1/geocode?lat=${coords.lat}&lon=${coords.lng}`, {\r\n            method: 'get',\r\n            headers: {\r\n                'user-key': process.env.REACT_APP_ZOMATOKEY,\r\n                'accept' : 'application/json'\r\n        }\r\n        })\r\n        const data = await response.json();\r\n        this.setState({\r\n            location: data.location,\r\n            nearbyRestaurants: data.nearby_restaurants\r\n        })\r\n    }\r\n\r\n    async searchRestaurant(query){ \r\n        if(query){\r\n            this.setState({\r\n                display: false,\r\n                loading: true\r\n            })\r\n            const response = await fetch(`https://developers.zomato.com/api/v2.1/search?entity_id=${this.state.location.entity_id}&entity_type=subzone&q=${query}&count=9`, {\r\n                method: 'get',\r\n                headers: {\r\n                    'user-key': process.env.REACT_APP_ZOMATOKEY,\r\n                    'accept' : 'application/json'\r\n            }\r\n            })\r\n            const data = await response.json();\r\n    \r\n            this.setState({\r\n                restaurants: data.restaurants\r\n            })\r\n\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    display:true,\r\n                    status: true,\r\n                    loading: false\r\n                })\r\n            }, 1000);\r\n        }else{\r\n            this.setState({\r\n                restaurants: this.state.nearbyRestaurants\r\n            })\r\n        }\r\n    }\r\n\r\n    modalOn = (item) =>{\r\n            this.initMap(item.location);\r\n        \r\n            const{name, phone_numbers, location} = item\r\n            this.setState({\r\n                modal: !this.state.modal,\r\n                modalInfo: {\r\n                    name,\r\n                    phone_numbers,\r\n                    location: location.address\r\n                }\r\n            })       \r\n    }\r\n\r\n    modalClose = () => {\r\n        this.setState({\r\n            modal:false\r\n        })\r\n    }\r\n\r\n    initMap(location) {\r\n        var sydney = new google.maps.LatLng(location.latitude, location.longitude);\r\n\r\n\r\n        const map = new google.maps.Map(\r\n            document.getElementById('map'), {center: sydney, zoom: 15});\r\n\r\n        var request = {\r\n          query: location.address,\r\n          fields: ['name', 'geometry'],\r\n        };\r\n        \r\n        const service = new google.maps.places.PlacesService(map);\r\n\r\n        service.findPlaceFromQuery(request, function(results, status) {\r\n          if (status === google.maps.places.PlacesServiceStatus.OK) {\r\n            for (var i = 0; i < results.length; i++) {\r\n              new google.maps.Marker({\r\n                map: map,\r\n                position: results[i].geometry.location\r\n              });\r\n            }\r\n\r\n            map.setCenter(results[0].geometry.location);\r\n          }\r\n        });\r\n      }\r\n\r\n      handleLoad = () => {\r\n          setTimeout(() => {\r\n              console.log(document.getElementsById('loader')[0]);\r\n          }, 3000)\r\n      }\r\n\r\n    componentDidMount(){\r\n        this.ipLookUp();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='home'>\r\n                <Form status={this.state.status} location={this.state.location} \r\n                    geocode={this.geocode}\r\n                    searchRestaurant={this.searchRestaurant}\r\n                    loading={this.state.loading}    \r\n                />\r\n                <Restaurants restaurants={this.state.restaurants}\r\n                status={this.state.display}\r\n                modal={this.state.modal}\r\n                modalOn={this.modalOn}\r\n                modalInfo={this.state.modalInfo}\r\n                />\r\n                <Modal modal={this.state.modal} modalInfo={this.state.modalInfo} modalClose={this.modalClose}/>\r\n                <div className='loader'></div>\r\n                {/* <Loader/> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\nimport Home from './Home/Home';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}